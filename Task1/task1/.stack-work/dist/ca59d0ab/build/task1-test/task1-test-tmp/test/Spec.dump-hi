
==================== FINAL INTERFACE ====================
2017-10-31 12:14:30.6088909 UTC

interface main@main:Main 8002
  interface hash: 7cc4d07fd4207ed635a84112cded01ca
  ABI hash: 3a490be4d72e201643bd6f49eda6f22e
  export-list hash: 8940f041fd3f0cb196e636a2fb67f53b
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 5c92261e61f9e4e6a349cdc486b98916
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies: Trees
package dependencies: HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI
                      QuickCheck-2.9.2@QuickCheck-2.9.2-LvlomhGMxrFBkX1zwiWpQu
                      Win32-2.3.1.1@Win32-2.3.1.1
                      ansi-terminal-0.6.3.1@ansi-terminal-0.6.3.1-CdiTOvx5ZEQ2RerUYIP05k
                      ansi-wl-pprint-0.6.7.3@ansi-wl-pprint-0.6.7.3-KaeMs0wRg3QC5nOlh5MJx3
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-m1TEyTenyr5nJN40TpHVj
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      call-stack-0.1.0@call-stack-0.1.0-FYVrCPXGP9EGAuTW32963O
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      hostname-1.0@hostname-1.0-IJBAKjDOB4SCVxNzp0Ae0Y
                      integer-gmp-1.0.0.1
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      regex-base-0.93.2@regex-base-0.93.2-AYjYAsBidAc8f5XNm9b2Aa
                      regex-posix-0.95.2@regex-posix-0.95.2-KQJt29lnRa45d6bFn9XkFO
                      test-framework-0.8.1.1@test-framework-0.8.1.1-GuLE52tp1mmDPbWOZ9aF0u
                      test-framework-hunit-0.3.0.2@test-framework-hunit-0.3.0.2-Fqd5rWs9W2aHzingWUIEFC
                      test-framework-quickcheck2-0.3.0.4@test-framework-quickcheck2-0.3.0.4-3iHnU1QXrfJH8eSqesRYYo
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      tf-random-0.5@tf-random-0.5-CJZw1ZWS5MOJlR60HqKEZL
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      xml-1.3.14@xml-1.3.14-AKug8Ud7K0VEhc87tBwsGy
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         regex-base-0.93.2@regex-base-0.93.2-AYjYAsBidAc8f5XNm9b2Aa:Text.Regex.Base.Context
         regex-posix-0.95.2@regex-posix-0.95.2-KQJt29lnRa45d6bFn9XkFO:Text.Regex.Posix.String
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
import  -/  HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI:Test.HUnit 430ab81af3668b12bae4950025858f90
import  -/  HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI:Test.HUnit.Base f0a9278b48574d2c877b887c21718635
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  Trees 5a8e22d89cfedd5780f94f54eeddaa65
  exports: d83706b0ad04a1a6bc67b3ed275d704d
  Node 4cb454553ea5dfa782979ba4b0a6f99d
  Node 52def62fb1bcb1592f10fdf01476ec0e
  getParents c8990c7aee56e0e866543e28cf3414a1
  view 141e736795b3ca98db6b39a1ffbef08c
import  -/  test-framework-0.8.1.1@test-framework-0.8.1.1-GuLE52tp1mmDPbWOZ9aF0u:Test.Framework 8d7ae196e7f2d2797bca66f128986e43
import  -/  test-framework-0.8.1.1@test-framework-0.8.1.1-GuLE52tp1mmDPbWOZ9aF0u:Test.Framework.Core b4b4561c9ccf02552a1301b325ff3dcc
import  -/  test-framework-0.8.1.1@test-framework-0.8.1.1-GuLE52tp1mmDPbWOZ9aF0u:Test.Framework.Runners.Console dccc34add5afbb68dbd5c2696d2afb81
import  -/  test-framework-hunit-0.3.0.2@test-framework-hunit-0.3.0.2-Fqd5rWs9W2aHzingWUIEFC:Test.Framework.Providers.HUnit 55cf6143a7da093825535e240ac0ab84
import  -/  test-framework-quickcheck2-0.3.0.4@test-framework-quickcheck2-0.3.0.4-3iHnU1QXrfJH8eSqesRYYo:Test.Framework.Providers.QuickCheck2 92f46b9d882b06d547d28c37ba9f20a9
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
d118e6c95893f709ef964239d1deea07
  ab :: Trees.Node
  {- Strictness: m,
     Unfolding: (Trees.Node Main.main22 Main.main19) -}
f17eb58440470aa28845fef293ca0927
  main :: GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
44405c07a41bc9c55c4eefb6f4d4a2cb
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Framework.Runners.Console.defaultMain1
                   Main.tests) -}
c3af0bee2cc7e2e42969cb61eca66b37
  main10 :: GHC.Base.String
  {- Unfolding: (Trees.view Main.main11) -}
167fc41174b669a211035a38d7b2abae
  main11 :: [Trees.Node]
  {- Unfolding: (Trees.removeDuplicates Main.main12) -}
dc1c56bcc3eb028e626d850de1e9e6f5
  main12 :: [Trees.Node]
  {- Unfolding: (Trees.getParentsH Main.main13) -}
dec26a51cb5d4b34b08ea61efdd02ea9
  main13 :: [Trees.Node]
  {- Unfolding: (GHC.Types.: @ Trees.Node Main.main25 Main.main14) -}
2e9d3d5cc13056c89f1428a7844b8f73
  main14 :: [Trees.Node]
  {- Unfolding: (GHC.Types.:
                   @ Trees.Node
                   Main.main15
                   (GHC.Types.[] @ Trees.Node)) -}
27d42a8a1b141027e49666319a32fee2
  main15 :: Trees.Node
  {- Unfolding: (Trees.Node Main.main24 Main.main16) -}
dea90124d339f6aa01e49f20f20fc0c5
  main16 :: [Trees.Node]
  {- Unfolding: (GHC.Types.:
                   @ Trees.Node
                   Main.main17
                   (GHC.Types.[] @ Trees.Node)) -}
059e7659535a6e5740039a7a4335d8c7
  main17 :: Trees.Node
  {- Unfolding: (Trees.Node Main.main23 Main.main18) -}
6183da240ede5b88c6b1ac8beb235111
  main18 :: [Trees.Node]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Trees.Node
                   Main.ab
                   (GHC.Types.[] @ Trees.Node)) -}
5536d63035b5282b0564f7095cc19cc3
  main19 :: [Trees.Node]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Trees.Node
                   Main.main20
                   (GHC.Types.[] @ Trees.Node)) -}
a8bf3f4859342b38cfbb40751c43be3f
  main2 :: Test.Framework.Core.Test
  {- Strictness: m2,
     Unfolding: (Test.Framework.Core.TestGroup
                   Main.main81
                   Main.main3) -}
2fae162ee7699c567e62e3c266f6e2d2
  main20 :: Trees.Node
  {- Strictness: m,
     Unfolding: (Trees.Node Main.main21 (GHC.Types.[] @ Trees.Node)) -}
376693df0326df97eae8a15b2ab56f52
  main21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "A"#) -}
8fdb612aab124de936194e3b860cc33f
  main22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "B"#) -}
ce9ce96d142af97bcbcc3f7cf36ecd73
  main23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "E"#) -}
fbef3b64aedf2849dec48f6579461504
  main24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "F"#) -}
a2fc58532460d66a565b9d501c0409fa
  main25 :: Trees.Node
  {- Unfolding: (Trees.Node Main.main29 Main.main26) -}
c82b06d863a2c445c82077581e1fe910
  main26 :: [Trees.Node]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Trees.Node
                   Main.main27
                   (GHC.Types.[] @ Trees.Node)) -}
6e05fd4bd176315e92a9a891f910475d
  main27 :: Trees.Node
  {- Strictness: m,
     Unfolding: (Trees.Node Main.main28 Main.main18) -}
ddc1f8008ce010003db0326698b61004
  main28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "C"#) -}
b1a365d0b66577630427996b76f58a3d
  main29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "D"#) -}
04dc0b4a4aa519842c4af5ee5736e6bf
  main3 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.main68
                   Main.main4) -}
b207a7b800993fd136c589d7b326921b
  main30 ::
    GHC.Base.String
    -> [GHC.Types.Char]
    -> [GHC.Types.Char]
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ [GHC.Types.Char]
                   Main.main31
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1) -}
210512a4f652033e5cd308d83bc1d7ff
  main31 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main32) -}
4683dfec2b337e51cc79f41305623e8b
  main32 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main40
                   Main.main33
                   GHC.Stack.Types.EmptyCallStack) -}
4b585baee68a664b5947b871c44ff5c9
  main33 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main39
                   Main.main38
                   Main.main37
                   Main.main36
                   Main.main35
                   Main.main36
                   Main.main34) -}
29340f9e2b7b705999350b231a68a862
  main34 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 111#) -}
65ad42a0e3d4835effc2a675d0b7e568
  main35 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 78#) -}
2707b1c40949cce296ee62f4882e7e13
  main36 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 25#) -}
cf821d6d159388c8f66092f7d342d4a7
  main37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test\\Spec.hs"#) -}
02e99ff5a58b4e872a736b621703b8c5
  main38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
2a302e00aa505c41aaa7b2da4243a2b7
  main39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
98312468769f1ff8864d45ad40825c9a
  main4 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.main55
                   Main.main5) -}
f8a8f04fd6e83c262a8d93a7731c41e9
  main40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "@?="#) -}
f0c9a39dadbbcac6f9f3343839bfb5af
  main41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Get all parents of node with a lot of varied parents"#) -}
b13c74369102bb9bc607d554089655c9
  main42 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.main54
                   Main.main43
                     `cast`
                   (Sym (Test.Framework.Providers.HUnit.N:TestCase[0]))) -}
0fab5ca90d6db31bd2293cc2b433ce84
  main43 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main48
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main45
                   Main.main44) -}
7c4168d2c9dac505a7a4b04e4bc8c016
  main44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CBA"#) -}
a0334f99a8e29aa319f9c87f78d679f2
  main45 :: GHC.Base.String
  {- Unfolding: (Trees.view Main.main46) -}
5344d7970c173534ab18b1179193f2ca
  main46 :: [Trees.Node]
  {- Unfolding: (Trees.removeDuplicates Main.main47) -}
12a0e768e6d6b3b966d0bc1cfb55e26e
  main47 :: [Trees.Node]
  {- Unfolding: (Trees.getParentsH Main.main26) -}
eb853e317a77bab8f7f04e5e01dd018c
  main48 ::
    GHC.Base.String
    -> [GHC.Types.Char]
    -> [GHC.Types.Char]
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ [GHC.Types.Char]
                   Main.main49
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1) -}
d7a2e78f977f9ee6fe5d7447a9004148
  main49 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main50) -}
b22293aa7a3da3dc3f09d030b3af8cdd
  main5 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.main42
                   Main.main6) -}
c2a342747e325c9eb3eb29f500b97eb4
  main50 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main40
                   Main.main51
                   GHC.Stack.Types.EmptyCallStack) -}
f8192327964f5020d8bc42d0f3f0a900
  main51 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main39
                   Main.main38
                   Main.main37
                   Main.main53
                   Main.main35
                   Main.main53
                   Main.main52) -}
faad6b0a219c710fe5106bbdca68b8fd
  main52 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 108#) -}
d708827aea5218f6b44db6bb28e2932b
  main53 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 24#) -}
bad232fe6b856deaad84261df476dd2c
  main54 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Get all parents of node with a lot of single parents"#) -}
36b2e2387abed4b8c99ceca2a83f40c9
  main55 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.main67
                   Main.main56
                     `cast`
                   (Sym (Test.Framework.Providers.HUnit.N:TestCase[0]))) -}
cf514a9beaaf1b8f6edae526f9c158c4
  main56 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main60
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main57
                   Main.main21) -}
dd6a9c7a2dbc98660d17eef7b1face91
  main57 :: GHC.Base.String
  {- Unfolding: (Trees.view Main.main58) -}
00710ee55e31a6196d5adccc5ece302d
  main58 :: [Trees.Node]
  {- Unfolding: (Trees.removeDuplicates Main.main59) -}
135da2739807f2455b92ce89d6d6fa0f
  main59 :: [Trees.Node]
  {- Unfolding: (Trees.getParentsH Main.main19) -}
e0125af43b1b15b0c96aa65cf9700b62
  main6 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.main7
                   (GHC.Types.[] @ Test.Framework.Core.Test)) -}
5406b60dadba4dc7be77caf62ceced90
  main60 ::
    GHC.Base.String
    -> [GHC.Types.Char]
    -> [GHC.Types.Char]
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ [GHC.Types.Char]
                   Main.main61
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1) -}
fbbf5792c12e1c15eb2cd1474a19eb94
  main61 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main62) -}
f7238be197defe7dc719f5fb0b98b5a9
  main62 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main40
                   Main.main63
                   GHC.Stack.Types.EmptyCallStack) -}
83bc78ac023b558dc286b01b5a4fb93d
  main63 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main39
                   Main.main38
                   Main.main37
                   Main.main66
                   Main.main65
                   Main.main66
                   Main.main64) -}
25833ceb90613ec8eb884fe1d50865d9
  main64 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 93#) -}
348d4e81f46795b8aac4b595b60f12b0
  main65 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 65#) -}
f16561b93125790df8c5a015f8fe757a
  main66 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 23#) -}
f0c3722c0a11f32b8e84320d82f63612
  main67 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Get all parents of node with one parent"#) -}
d88aeaf1d92c1b23e7d9c5a861f76f64
  main68 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.main80
                   Main.main69
                     `cast`
                   (Sym (Test.Framework.Providers.HUnit.N:TestCase[0]))) -}
6c92781c9aa443372daa392fc4c2baa9
  main69 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main73
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main70
                   (GHC.Types.[] @ GHC.Types.Char)) -}
0c266dc260aec79cb9e456dfac11fb89
  main7 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.main41
                   Main.main8
                     `cast`
                   (Sym (Test.Framework.Providers.HUnit.N:TestCase[0]))) -}
f90a236818cfc5a4997207d0b5c4b28e
  main70 :: GHC.Base.String
  {- Unfolding: (Trees.view Main.main71) -}
bcd21f598026340be5a1f65501a2036f
  main71 :: [Trees.Node]
  {- Unfolding: (Trees.removeDuplicates Main.main72) -}
5a0a9c8a78f30100b96e44d566239a57
  main72 :: [Trees.Node]
  {- Unfolding: (Trees.getParentsH (GHC.Types.[] @ Trees.Node)) -}
36594eb79176e8d31f54ad0428a8df46
  main73 ::
    GHC.Base.String
    -> [GHC.Types.Char]
    -> [GHC.Types.Char]
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ [GHC.Types.Char]
                   Main.main74
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1) -}
cf0e3b1b80e27f6bb3cfb688c568a512
  main74 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main75) -}
b4704872bcee0dfef48f6acd494c03b1
  main75 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main40
                   Main.main76
                   GHC.Stack.Types.EmptyCallStack) -}
c1b020d2b0f5421887ccedbe18cdc38a
  main76 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main39
                   Main.main38
                   Main.main37
                   Main.main79
                   Main.main78
                   Main.main79
                   Main.main77) -}
ce5ae34a3ef4edc5e45dcdb0b1a293c0
  main77 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 82#) -}
942c2159f3dab1908aaf9090da7ac558
  main78 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 55#) -}
d3c4a29b5e6db3553b461edfe525e5c3
  main79 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 22#) -}
8bf115f21d45c7dcc70ccb6fe904c2ff
  main8 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main30
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main10
                   Main.main9) -}
ea2ac464e773999d6ada9716ed93832d
  main80 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Get all parents of parentless"#) -}
2aee2b0911da692fbc7c40fac982813e
  main81 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "getParents Tests"#) -}
dbf5924195e75fd71b158eaf99031263
  main82 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
fc343fa2fccb8ba3af67980d40569029
  main9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DCBAFE"#) -}
21f78c57384933d09429c27e6001b8cf
  tests :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.main2
                   (GHC.Types.[] @ Test.Framework.Core.Test)) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

